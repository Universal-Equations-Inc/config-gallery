##############################################################################
#
# Oracle JDeveloper Launcher Configuration File
# Copyright 2000-2013 Oracle Corporation.
# All Rights Reserved.
#
##############################################################################
#
# The format of this file is:
#
#    "Directive      Value" (with one or more spaces and/or tab characters
#    between the directive and the value)  This file can be in either UNIX
#    or DOS format for end of line terminators.  Any path seperators must be
#    UNIX style forward slashes '/', even on Windows.
#
# This configuration file is not intended to be modified by the user.  Doing so
# may cause the product to become unstable or unusable.  If options need to be
# modified or added, the user may do so by modifying the custom configuration files
# (the shared jdeveloper product.conf file and the optional tool specific .conf file)
# located in the user's home directory.  The location of these files is dependent
# on the host platform, but may be found according to the following guidelines:
#
# Windows Platforms:
#   The location of user/product files are often configured during installation,
#   but may be found in:
#     %APPDATA%\JDeveloper\<product-version>\product.conf
#     %APPDATA%\JDeveloper\<product-version>\jdev.conf
#
# Unix/Linux/Mac/Solaris:
#   $HOME/.jdeveloper/<product-version>/product.conf
#   $HOME/.jdeveloper/<product-version>/jdev.conf
#
# In particular, the directives to set the initial and maximum Java memory
# and the SetJavaHome directive to specify the JDK location can be overridden
# in that file instead of modifying this file.
#
##############################################################################

IncludeConfFile ../../ide/bin/ide.conf

#
# Specify the JDeveloper launcher class.
#
SetMainClass oracle.ide.osgi.boot.JDeveloper

#
# Include all clusters for NetBeans (there's only a subset in ide.conf),
# 'bridge' cluster going first as the location of shared caches.
#
AddVMOption -Dide.cluster.dirs=../../netbeans/bridge/:../../netbeans/fcpbridge/:../../netbeans/ide/:../../netbeans/../:../../netbeans/java/:../../netbeans/profiler/:../../netbeans/extra/:../../netbeans/uc/

# Product cluster directories for JDeveloper. Note that anyting of the form
# <MW home>/<product id>/plugins/jdeveloper/ will be registered as a "dynamic"
# cluster, and does not have to be listed here.
AddVMOption -Dproduct.cluster.dirs=../../../oracle_common/plugins/jdeveloper

#
# Specify additional dropins directories that contain JARs for OSGi
# bundles to be included in the product.  Multiple paths can be specified
# separated by colons.  The paths can either be absolute, or relative to
# jdeveloper/jdev/bin.  For more information, see the readme.txt under
# jdeveloper/dropins.
#
# AddVMOption -Dide.bundle.search.path=

#
# In some product installations the installer will update the SetJavaHome
# directive below with a path to a JDK. If not set, the launcher will try
# to find a JDK to use and if not found it will ask the user for one.
# There is a SetJavaHome directive in the product.conf file in the user's
# home directory (see comment at the top) which can be used to specify
# a preferred JDK and override any set here.
#
SetJavaHome /Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home

#
# Replace heavyweight AWT controls with lightweight implementations.
#
AddVMOption  -Xbootclasspath/p:../lib/lwawt.jar

#
# Allow access to certain package private methods for web service apt work
# moved from launcher.sh as per bug 9761725
#
AddVMOption  -Xbootclasspath/p:../lib/apt-expose.jar

#
# Don't swap the entire JDev process out of memory when minimizing the main window.
#
AddVMOption  -Dsun.awt.keepWorkingSetOnMinimize=true

#
# Automatically dump heap on OutOfMemoryError.
# The heap dump is in HPROF binary format, and so it can be analyzed using
# any tools that can import this format. Examples are jhat, NetBeans and YourKit.
# By default the heap dump is created in a file called java_pid<pid>.hprof in the
# working directory of the VM.
#
AddVMOption  -XX:+HeapDumpOnOutOfMemoryError

#
# Option to enable OWSM policy types RM and Management on the policy configuration
# dialog for a web service.
# The same option, if set to true, also shows the policy configuration dialog for
# web service client as well.
# This flag exists so that when OWSM support for RM and Management policy
# types for WLS becomes available in the server module, removing this flag or
# setting it to 'true' will bring those options in JDev WS policy configuration.
#
AddVMOption  -Doracle.jdeveloper.webservice.showAllOwsmPolicyTypes=false

#
# Controls the acess to OWSM policy property override dialog from the client policy
# configuration dialog.
#
AddVMOption  -Doracle.jdeveloper.webservice.hidePropertyOverride=false

#
# Prevents the desktop hanging when debugging JDev on Linux and hitting a breakpoint with a popup open.
# See Sun Bug: 6714678 (http://bugs.sun.com/view_bug.do?bug_id=6714678)
# Note: This only prevents the hang when debugging JDev itself. To prevent hanging with other
# projects add this flag to the java options for the process to be debugged.
#
AddVMOption  -Dsun.awt.disablegrab=true

#
# Uncomment this if you want to configure the set of features that
# will be loaded on startup (the ide-core feature is always loaded
# on startup, but you can specify a comma-delimited list of additional
# feature ids)
# AddVMOption   -Doracle.ide.startup.features=feature-id1,feature-id2

#
# JDeveloper uses its own caching clipboard that is more reliable
# than the system clipboard. This clipboard is synchronized with
# the system clipboard in an asynchronous way. In the unlikely case
# of problems with this synchronization uncomment the following
# line to let JDeveloper use the system clipboard directly.
#
# AddVMOption -Dide.nbclipboard.enabled=false

#
# Needed for PL/SQL debugging
#
AddVMOption  -Xbootclasspath/p:../../rdbms/jlib/ojdi.jar

# Sets the home of the patches directory
AddVMOption -Dide.patches.dir=jdev/lib/patches


# Sets the endorsed directory to match that of the
# weblogic modules, required to pick up right version of -WS/-B apis

# Removed as interferred with install-debugrt target and no longer required for JDK 8
# AddVMOption -Djava.endorsed.dirs=../../../oracle_common/modules/endorsed

# Added to address issue of incorrect (Sun) JAXB context being picked as opposed to the correct one, from EclipseLink.

AddVMOption  -Djavax.xml.bind.context.factory=org.eclipse.persistence.jaxb.JAXBContextFactory
AddVMOption  -Djavax.xml.bind.JAXBContext=org.eclipse.persistence.jaxb.JAXBContextFactory

#
# Required to allow interaction between JAXB and jaxp for file protocols other than just file and http
# when reading xml files (eg wsdl/wadl/xsd) since jdk7u45 added new security constraints for url protocols
#
AddVMOption -Djavax.xml.accessExternalSchema=file,http,https,wsdlfile,wsdlhttp,wsdlhttps,bundleresource

#
# Disable raster image pool used by JavaFX.
# Image pool performance is slow and not required on a desktop app.
#
AddVMOption -Ddecora.disable.pool=true

# Uncomment this out to control when re-scanning for new features happens. If set to true,
# this property will force the rescanning of oracle home on every startup (and slow down startup,
# naturally). If false, the IDE will not rescan on startup. If not set at all, scanning will happen
# only if there are new features installed; when new features are installed will be then
# determined by the timestamp of the file pointed to by oracle.install.timestamp.location
# Setting both of these system properties, therefore, is never needed.
#
# AddVMOption -Doracle.install.rescan=true

#
# The file whose timestamp will tell the IDE whether to rescan for new products
#
AddVMOption -Doracle.install.timestamp.location=inventory/ContentsXML/comps.xml

#
# The list of all resources that are not to delegate resource look-ups using buddy policy.
#
AddVMOption -Doracle.ide.osgi.buddy.delegate.resource.exempt.paths=META-INF/services/javax.xml.ws.spi.Provider,META-INF/services/javax.xml.datatype.DatatypeFactory

#
# This define keeps track of command line options that are handled by JDeveloper itself,
# see ide.conf for a related define with options handled by the core IDE.
# For options that take arguments (-option:<arguments>), add the fixed prefix of
# the the option, e.g. -role:.
#
AddVMOption -Doracle.ide.ProductFrameworkCommandLineOptions=-dumpclasspathsonprojectopen,-enableFileTypeAssociation,-fileTypeKeyDefined,-uidebug

# Use the below system property to capture the stack traces, with classloader names, of intermittent CNFE-s
# AddVMOption -Doracle.dump.classloading.info.for.class=weblogic.jndi.internal.ServerNamingNode_12140_WLStub
# AddVMOption -Doracle.dump.classloading.info.for.bundle=oracle.external.weblogic-jaxws-client

# INSTALLER CONFIGURED VALUES
AddVMOption -Dide.system.dir=/Users/malkeb723/.jdeveloper
AddVMOption -Dide.work.dir=/Users/malkeb723/Applications/Oracle_Home/jdeveloper/mywork

# optimize the JVM for strings / text editing
AddVMOption -XX:+UseStringCache
AddVMOption -XX:+OptimizeStringConcat

# if on a 64-bit system, but using less than 32 GB RAM, this reduces object pointer memory size
AddVMOption -XX:+UseCompressedOops

# use an aggressive garbage collector (constant small collections)
AddVMOption -XX:+AggressiveOpts

# for multi-core machines, use multiple threads to create objects and reduce pause times
AddVMOption -XX:+UseConcMarkSweepGC
AddVMOption -XX:+UseGCOverheadLimit
